name: Publish Release
on:
  pull_request:
    paths-ignore:
      - ".github/**"
      - docs/
      - "README.md"
  push:
    # tags:
    #   - 'v*'
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "README.md"

env:
  FLUTTER_VERSION: "3.24.5"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(sed -n 's/^version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p' ./pubspec.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build_apk:
     runs-on: ubuntu-latest
     needs: build
     steps:
      - uses: actions/checkout@v3

      - name: Install Flutter actions dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq wget curl xz-utils git
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Install CMake ^3.14
        run: |
          sudo apt-get install -y build-essential libssl-dev pkg-config
          wget "https://cmake.org/files/v3.30/cmake-3.30.0-linux-x86_64.tar.gz"
          tar xvf cmake-3.30.0-linux-x86_64.tar.gz
          sudo mv cmake-3.30.0-linux-x86_64 /opt
          sudo ln -s --force /opt/cmake-3.30.0-linux-x86_64/bin/cmake /usr/local/bin/cmake

      - name: Install Java 17
        run: |
          sudo apt-get install openjdk-17-jdk openjdk-17-jre
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Install Android Sdk
        run: sudo apt-get install android-sdk

      - name: Fix Flutter actions
        run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/stable-3.24.5-x64

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-result
          path:
            ./build/app/outputs/flutter-apk/app-release.apk


  build_tar_x86_64:
     runs-on: ubuntu-latest
     needs: build
     steps:
      - uses: actions/checkout@v3

      - name: Install Flutter actions dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq wget curl xz-utils git
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Install CMake ^3.14
        run: |
          sudo apt-get install -y build-essential libssl-dev pkg-config
          wget "https://cmake.org/files/v3.30/cmake-3.30.0-linux-x86_64.tar.gz"
          tar xvf cmake-3.30.0-linux-x86_64.tar.gz
          sudo mv cmake-3.30.0-linux-x86_64 /opt
          sudo ln -s --force /opt/cmake-3.30.0-linux-x86_64/bin/cmake /usr/local/bin/cmake

      - name: Fix Flutter actions
        run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/stable-3.24.5-x64

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev

      - name: Compile linux
        run: flutter build linux --release

      - name: Create tar.gz archive
        run: |
          cd ./build/linux/x64/release/bundle
          tar -czvf ../../../../../result.tar.gz *

      - name: Upload tar.gz archive
        uses: actions/upload-artifact@v4
        with:
          name: tar-gz-x86-64-result
          path: ./*.tar.gz

  build_deb_x86_64:
     runs-on: ubuntu-latest
     needs: build
     steps:
      - uses: actions/checkout@v3

      - name: Install Flutter actions dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq wget curl xz-utils git
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Install CMake ^3.14
        run: |
          sudo apt-get install -y build-essential libssl-dev pkg-config
          wget "https://cmake.org/files/v3.30/cmake-3.30.0-linux-x86_64.tar.gz"
          tar xvf cmake-3.30.0-linux-x86_64.tar.gz
          sudo mv cmake-3.30.0-linux-x86_64 /opt
          sudo ln -s --force /opt/cmake-3.30.0-linux-x86_64/bin/cmake /usr/local/bin/cmake

      - name: Fix Flutter actions
        run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/stable-3.24.5-x64

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev

      - name: Enable dart_distributor
        run: dart pub global activate flutter_distributor

      - name: Update PATH
        run: echo 'export PATH="$PATH:$HOME/.pub-cache/bin"' >> ~/.bashrc

      - name: Build deb package
        run: flutter_distributor package --platform linux --targets deb

      - name: Find deb file
        id: find_deb
        run: |
          DEB_PATH=$(find ./dist -name "*-linux.deb")
          echo "deb_path=$DEB_PATH" >> $GITHUB_OUTPUT

      - name: Check if deb file exists
        id: check_file
        run: |
          if [[ ! -f "${{ steps.find_deb.outputs.deb_path }}" ]]; then
            echo "File not found: ${{ steps.find_deb.outputs.deb_path }}"
            exit 1
          fi

      - name: Upload deb file
        uses: actions/upload-artifact@v4
        with:
          name: deb-x86-64-result
          path: ${{ steps.find_deb.outputs.deb_path }}

  build_appimage_x86_64:
     runs-on: ubuntu-latest
     needs: build
     steps:
      - uses: actions/checkout@v3

      - name: Install Flutter actions dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq wget curl xz-utils git
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Install CMake ^3.14
        run: |
          sudo apt-get install -y build-essential libssl-dev pkg-config
          wget "https://cmake.org/files/v3.30/cmake-3.30.0-linux-x86_64.tar.gz"
          tar xvf cmake-3.30.0-linux-x86_64.tar.gz
          sudo mv cmake-3.30.0-linux-x86_64 /opt
          sudo ln -s --force /opt/cmake-3.30.0-linux-x86_64/bin/cmake /usr/local/bin/cmake

      - name: Fix Flutter actions
        run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/stable-3.24.5-x64

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev libfuse2

      - name: Compile linux
        run: flutter build linux --release

      - name: Copy compiled linux files
        run: |
          mkdir AppDir
          cp -r ./build/linux/x64/release/bundle/* AppDir/

      - name: Copy Recipe to correct location
        run: cp ./scripts/AppImage/AppImageBuilder_x86_64.yml AppImageBuilder.yml

      - name: Copy logo to AppDir
        run: |
          mkdir -p AppDir/usr/share/icons/hicolor/32x32/apps
          cp ./assets/img/logo-32.png AppDir/usr/share/icons/hicolor/32x32/apps/procrastinator.png
          mkdir -p AppDir/usr/share/icons/hicolor/128x128/apps
          cp ./assets/img/logo-128.png AppDir/usr/share/icons/hicolor/128x128/apps/procrastinator.png
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp ./assets/img/logo-256.png AppDir/usr/share/icons/hicolor/256x256/apps/procrastinator.png
  
      - name: Build AppImage
        uses: AppImageCrafters/build-appimage@57c3bc6963f870ce3be103117de5b5e33ffbaeb6
        with:
          recipe: ./AppImageBuilder.yml

      - name: Upload AppImage file
        uses: actions/upload-artifact@v4
        with:
          name: appimage-x86-64-result
          path: ./*.AppImage

  build_windows_zip_x86_64:
     runs-on: windows-latest
     needs: build
     steps:
      - name: Fix long file paths
        run: git config --system core.longpaths true

      - uses: actions/checkout@v3

      - name: Fix Flutter actions
        run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/stable-3.24.5-x64

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Compile for Windows
        run: flutter build windows --release

      - name: Zip compiled files
        working-directory: .
        run: Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath Procrastinator.zip

      - name: Upload zip
        uses: actions/upload-artifact@v4
        with:
          name: windows-zip-x86-64-result
          path: ./Procrastinator.zip

  release:
    runs-on: ubuntu-latest
    needs:
    - build
    - build_apk
    - build_tar_x86_64
    - build_deb_x86_64
    - build_appimage_x86_64
    - build_windows_zip_x86_64
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Draft release
        id: draft_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ needs.build.outputs.version }}
          name: v${{ needs.build.outputs.version }}

      # APK
      - name: Download apk file
        uses: actions/download-artifact@v4
        with:
          name: apk-result
          path: apk-result

      - name: Copy apk file to root
        run: cp apk-result/*.apk .

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: app-release.apk
          asset_name: Procrastinator-${{ needs.build.outputs.version }}-android-x64.apk
          asset_content_type: application/vnd.android.package-archive

      # TAR.GZ (x86_64)
      - name: Download tar.gz file
        uses: actions/download-artifact@v4
        with:
          name: tar-gz-x86-64-result
          path: tar-gz-x86-64-result

      - name: List files in tar.gz-directory
        run: ls -l tar-gz-x86-64-result

      - name: Copy tar.gz file to root
        run: cp tar-gz-x86-64-result/* result.tar.gz

      - name: Upload Release Asset (tar.gz)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: result.tar.gz
          asset_name: Procrastinator-${{ needs.build.outputs.version }}-linux-x86-64.tar.gz
          asset_content_type: application/gzip

      # DEB (x86_64)
      - name: Download deb file
        uses: actions/download-artifact@v4
        with:
          name: deb-x86-64-result
          path: deb-x86-64-result

      - name: Copy deb file to root
        run: cp deb-x86-64-result/*.deb result.deb

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: result.deb
          asset_name: Procrastinator-${{ needs.build.outputs.version }}-linux-x86-64.deb
          asset_content_type: application/vnd.debian.binary-package

      # APPIMAGE (x86_64)
      - name: Download AppImage file
        uses: actions/download-artifact@v4
        with:
          name: appimage-x86-64-result
          path: appimage-x86-64-result

      - name: List files in appimage-directory
        run: ls -l appimage-x86-64-result

      - name: Copy AppImage file to root
        run: |
          for file in appimage-x86-64-result/*; do
            if [[ $file == *.AppImage && $file != *.AppImage.zsync ]]; then
              cp "$file" result.AppImage
            fi
          done

      - name: Upload Release Asset (AppImage)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: result.AppImage
          asset_name: Procrastinator-${{ needs.build.outputs.version }}-linux-x86-64.AppImage
          asset_content_type: application/x-appimage

      # WINDOWS ZIP (x86_64)
      - name: Download windows zip file
        uses: actions/download-artifact@v4
        with:
          name: windows-zip-x86-64-result
          path: windows-zip-x86-64-result

      - name: Copy zip file to root
        run: cp windows-zip-x86-64-result/*.zip result.zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: result.zip
          asset_name: Procrastinator-${{ needs.build.outputs.version }}-windows-x86-64.zip
          asset_content_type: application/zip